

Added features / changes in v7.114.319 @ 2019-11-17
===================================================

1. added RD lidar sensor, see indigo web site for details


3. fixes to code on rpi to determin ip numbers etc. ie when in first startup = not connected to indigo
Added features / changes in v7.113.319 @ 2019-11-13
===================================================

1. small fixes to auto wifi config using file on ssd boot directory

2. small fixes to menus

3. fixes to code on rpi to determin ip numbers etc. ie when in first startup = not connected to indigo


Added features / changes in v7.113.318 @ 2019-11-07
===================================================

1. added device type 52pi relay i2c HAT. This relay board has 4 relays, set through i2c, 
   you can stack 4 of these boards w 16 total relays, no soldering needed
   see: wiki.52pi.com/index.php/DockerPi_4_Channel_Relay_SKU:_EP-0099 for details

2. fixed some smaller items, menus etc

3. added option to setup wifi through file on RPI SSD boot directory. 
   this is the directory visible when you mount the SSD on a mac, it should also contain the file config.txt 
   add a file: wifiInfo.json with the exact format:
   {"SSID":"abc", "passCode":"def"}
   the file name as well as keys and data are case sensitive.
	   it will add:
network={
      ssid="abc"
      psk="def"
}
   to /etc/wpa_supplicant/wpa_supplicant.conf. replace abc and def with your wifi setup.
   the /boot/wifiInfo.json file will be removed once used.
   ===> this allows to configure wifi at first start w/o connecting terminal and monitor and keyboard  



Added features / changes in v7.112.311 @ 2019-10-20
===================================================

1. fixed rpi device edit "Field ID sleepAfterBootLabel was already used. "



Added features / changes in v7.112.316 @ 2019-10-20
===================================================

1. fixed GPIOINPUT device type
2. catch error reading beacons w short message 

 
Added features / changes in v7.112.314 @ 2019-10-13
===================================================

1. switched from ifconfig to ip xx for network info on rpi if os is > 7 (jessie)
2. checking network connectivity now checking for router instead of dns server
3. improved handling of frequencies of sensor updates 
4. some smaller menu corrections
5. upgraded neopixel libraries to support rpi4
5. changed DHT temp+humidity sensor to check temp twice and build average (takes ~ 3 secs)

 


Added features / changes in v7.112.313 @ 2019-10-07
===================================================

1. bad plugin prefs error check at startup.



Added features / changes in v7.112.312 @ 2019-10-03
===================================================

1. fixed situation when plugin deletes RPI, due to  MAC number =00:00:00:00:00:00 - bad data coming from RPI

2. tuned IMPULSE sensor

3. made # of digits for sensors consistent

4. added several options for display device on RPI
   - supports xwindows = can show composed (dynamic) images in window on rpi desktop
   - added "thermometer" item to display, w options for labels, ticks etc
   - added zoom factor for xwindows display.
   - it will automatically start xwindows on rpi when indigo output device is an xwindows device type
   - option in rpi device edit to start windows on RPI by rpi-master program 

Added features / changes in v7.111.311 @ 2019-09-16
===================================================

1. debug on rpi now logs individual ibeacon msgs as they come

2.  added battery level querry for beacons, shown in dev.states["batteryLevel"] and in detailed device listing in indigo main window
   Prep-steps::::::
     you MUST first edit each ibeacon indigo device and set enable battery level .. and select either 
     "randown" or plain com to iBeacons.   xy beacons use random,  NODA, iHere .. use plain comm.
        you can try on the rpi with:
        hciconfig hci0 down 
        hciconfig hci0 up
         for xy beacons:
           /usr/bin/gatttool -b MAC#  -t random  --char-read --uuid=2A19
         for iHere,  Noda .. 
            /usr/bin/gatttool -b MAC#  --char-read --uuid=2A19
         replace MAC# with eg 0C:F3:EE:00:66:15 = the mac # of your ibeacon connected to that RPI

         the gatttool will return something like this (or an error message, can not connect)
             handle: 0x002f 	 value: 64 
            where 64 is the hex value, into integer = 100%
        gatttool will conflict with the regular iBeacon message listening = during that time(..15 secs per ibeacon) no ibeacon messages will be received 
        The RPI that is asked to get the battery level is the "closestRPI" to the iBeacon(see dev.state). When a beacon is not "up" it will not be querried and will keep its battery level unchanged

      In order to check if your SSD is supporting gatttol do: ssh pi@... gatttool.. if its says not found you need to upgrade your ssd
      error messages:
       -- connect error: software caused connection abort (103)       == beaconloop might have restarted and the BLE stack was rebooted, ==> resubmit
       -- connect error: transport endpoint is not connected (107)    == beacon is in state where it rejects requests ==> either ranom on/off or retry
       -- connect error: function not implemented (38)                == beacon is in state where it rejects requests==> either random on/off or retry
       -- connect error: timeout                                      == connection took longer that 15 seconds, terminated ==> retry

    activate:
       - Set option in ibeacon device edit to enable battery reading 
       - A) in pibeacon menu select: "Get iBeacons parameters from rPi" for a one-time update
       - B) create an indigo action group and select "Get iBeacons parameters from rPi ie battery levels"
             then add a schedule ( eg every 6 hours ) to call that action group.

    This is the first version, some fine tuning will be necessary.


Added features / changes in v7.110.306 @ 2019-09-07
===================================================

1. added option for logfile size on rpi
2. fixed no reboot if no ibeacon signal parameter on RPI, it was not active

3. added INPUTcoincidence device:
    eg using 2 .. 4 geiger counters you can set up a cosmic muon detector, by requiring simultaneous (within coincidence time window) events by all GPIOs
    coincidence time of  INPUTpulses from different gpios trigger is 0.1 msec to several minutes.
    this can be used to for FAST (msecs) detection of 2 events and up to several minutes



Added features / changes in v7.109.305 @ 2019-09-05
===================================================

1.  added test if python-serial is installed in master.py

2.  change the check if userid/password is setup 

3. change bug level setup for rpi, now select which PRI to debug, not which area.

4. fixed several smal formatting bugs 

5. Option to enable setting wifi supplicant info on your RPI w/o terminal and keyboard attached to the RPI
    at FIRST launch of new SSD, before any connection to RPI is made.
    At start Master.py checks if GPIO#26 (lower left pins) is low = bridge grnd to GPIO#26
    An adhoc wifi server: "clock"  ip# 192.168.1.254 is started
    Connect laptop to that wifi server w safari  @ 192.168.1.254:8010 
         there you can set SSID and passwd of your home network (also timezone)
    Or you can ssh pi@192.168.1.254 pwd = pibeacon and manually configure files in commandline mode
    FIRST:  select "clock" wifi
            you must attach to that wifi in network prefs / advanced / tcpip:  
            set your dhcp to manual and assign an IPv4 #(eg 192.168.1.5)
            set subnetmask to 255.255.255.0; router 192.168.1.254
            click ok  ... apply
    This is helpfull for a RPI-0W. You can then set your wifi sidd and password and the RPI-0W will connect to your home wifi network after reboot
    ==> this is only an option with a new SSD image > 2019-09-xx



Added features / changes in v7.109.304 @ 2019-08-24
===================================================

1. Now all sending RPI-> indigo is in independed threads. 
   This has the advatange that the sensor programs do not have to wait
   until the sending is finished, but can continue to eg count pulse etc.

2. improved the management of the pulse sensor on when to send updates.


Added features / changes in v7.109.302 @ 2019-08-24
===================================================

1. added sensor Geiger counter support
   use INPUT pulse sensor as input
   set deadtime and bounce time to 0
   you need to make sure that the RPI does not get 5V to GPIO.
   tested w  Portable Handle Geiger Counter 0.01 Î¼Sv/h DIY Kit Nuclear Radiation Detector With Miller GM Tube Gamma Beta Ray Suit for Arduino
   https://www.amazon.com/Portable-Counter-Nuclear-Radiation-Detector/dp/B0749KGY81/ref=sr_1_5?keywords=gamma+ray+detector&qid=1566533293&s=gateway&sr=8-5
    standard cheap china detector.
    with this detecor you need to bridge the P100 pins and use the headset output through a voltage devider (2x 4.7K Ohm) as GPIO input
    The detector can be connected to +5V/ground from the RPi as power source.
    As the signals are ~ 0.5 mSec wide a faster RPI (3 and higher) is recommended
    in normal circumstance you should see ~ 1 count per second. w a radioactive source like:
    Geiger Counter Radioactive Source Thorium Lantern Mantles  you should see ~ 10 counts/second
    These detectors do not detect alpha particles. Mostly muons and some elctrons / gamma rays from cosmic particles  (muon) decays

2. improved INPUTpulse sensor. now shows
   counts per minute [cpm], frequency = counts per second [cps]
   improved handling of fast and short pulses


Added features / changes in v7.108.302 @ 2019-08-24
===================================================

1. various little fixes 

2. added several options to pi server:
	- network management, if network config chnages : do notthing, retsrat master, reboot
	- added option to start webinput server where you can enter wifi SID and password w/o using shh

3. works with rpi - buster image 



Added features / changes in v7.107.301 @ 2019-07-30
===================================================

1. fixed error: Error in Line 5014 has error=Unknown format code 'f' for object of type 'str'

2. some small format adjustments


Added features / changes in v7.107.300 @ 2019-07-30
===================================================

1. fixed error: line 7336 has error=No JSON object could be decoded

2. converted (most) logging of modules of code running on the rpi to regular logging



Added features / changes in v7.107.298 @ 2019-07-12
===================================================

1. added menu option in send ... to RPI:
   - get pibeacon log:  does an tail - 100 on /var/log/pibeacon and puts it into the plugin.log file
   - gets output of hcitool lesacn from the rpi to plugin.log
   - lines for rpi log are preceded by "-Pi#x - " to easily id that info

2. added option to use the new rpi UPS v2 ups. It has an interface (rx/tx and signal shutdown eminent) 
   you can connect the 3 pins to your rpi (rx,tx and one gpio) and set shutdown at xx % battery power left and or use shutdown eminent signal to shut down the rpi.
   this version (2) is significantly  better than the previous UPS version.

3. cleaned up thread for sending stuff to the rpi's better management of down rpi ...

4. fixed several little things, menus



Added features / changes in v7.105.295 @ 2019-07-03
===================================================

1. fixed  chmod for pibeacon.log removed, as it is in std log directory now

2. checking if userid password is set AND ( authorisathion is basic or digest)
   = does not wait for userid and passsword if no indigo security enabled.

3. cleaned up threads for sending files to RPI
   now much clearer and will also manage new RPI w/o restarting plugin.

Added features / changes in v7.105.294 @ 2019-06-30
===================================================

1. addded options for AMG88xx i2c address - added 0x68 0x6A


Added features / changes in v7.105.293 @ 2019-06-22
===================================================

1. allows now to "nnormally creat an RPi beside "basic initial setup of RPI.
   you can now setup all parameters from device edit 
   basic initial setup is still available

2. cleaned up device edit py programs (internal only)

3. cleaned up wlan/eth management on RPI



Added features / changes in v7.105.291 @ 2019-06-22
===================================================

1. fix .. hopefully .. last bug w wlan eth management
    did not read changed settings on RPI
2. packages w wrong/changed RPI-IP number are now processed not rejected - a warning message is logged, data is ignored
      IF message does NOT start w "pi_IN_":
          NO ACK is send to that device w wrong sender IP .. assuming junk data and from a bad IP number
      IF message has right structure:
          ok ACK is send nervertheless


Added features / changes in v7.105.290 @ 2019-06-20
===================================================

1. fixed: wifi only setup, RPI master  was always restarting
   added check for # of wlan0 / wifi packages to check if networks are up



Added features / changes in v7.105.288 @ 2019-06-20
===================================================

1. fixed: error in Line 514 has error=global name 'wlIP' is not defined


Added features / changes in v7.105.287 @ 2019-06-19
===================================================

1. added option for ibeacon plot postions background.png
   can either be in (1) .../Indigo x.y/Preferences/Plugins/com.karlwachs.piBeacon/plotPositions/
   or in            (2)   /output image path/
   fixed description in config, was pointing to old directories


Added features / changes in v7.105.286 @ 2019-06-17
===================================================

1. fixed "error in Line 513 has error=global name 'wifiIP' "
   previous version had a bug introduced 

Added features / changes in v7.105.285 @ 2019-06-13
===================================================

1. fixed "error in Line 513 has error=global name 'wifiIP' "


"

Added features / changes in v7.105.284 @ 2019-06-13
===================================================

1. fixed some code and menus for select wlan/eth on raspberry 

2. added option to sitwch on fan when RPI internal temp is > xx C
   in addtion to any external temp sensor 
   this is set in RPI device edit

3. now warnings are also printoed into the standard indigo logfile, was send only to pibeacon.log file before

4. when the RPI boots it check if the "dirty bit was on (ie shutdown = simple power off)"
   when after boot the dirty bit is still on the plugin will get a message ( shown in the logfile)

6. increase wait time for proper start of tcpip stack to > 75 secs from 65 secs. should always work after 25 secs.
   but some slower MAC might take a little longer

7. change error message when tcpip stack does not strat properly to something meaingfull beside error in line ..

8. changed log message when sending data to rpi and it is not accepting commands while rebooting to a simple warning, not error



Added features / changes in v7.105.283 @ 2019-06-13
===================================================

1. added option to select wlan/ eth on rpasberry 
    switch wlan/eth : on / off / on if other off/ do not change
    useIP# use / do not use / use if other off/
       this is the IP # send to the plugin to ID the device
    the default is 
      eth : do not change, useIP#
      wlan: on if eth off, useIP if eth off
== this was added to cover: wifi is used for comm to indigo and eth for another subnet

2. fixed pibeacon utils format error

general setting is done in config, as soon as the rpi is edited the device edit setting is used.



Added features / changes in v7.105.280 @ 2019-05-08
===================================================

1. added option to show BLEconnect devices on location plot.
   you need to set options (color, name etc) in devcie edit.

2. fixed some code inconsistencies after running code inspec w pycharm.
   and found some bugs, but only when exceptions occur = not under normal operations
   hence they do not show up frequently

3. remove old style version check, now depends on indigo to do version checking (7.3 and higher)


Added features / changes in v7.104.279 @ 2019-05-08
===================================================

1. moved setGPIO command into execcommands. that reduces delay with older RPI ie RPI1
   and do not send back status to indigo if not requested

2. now all pibeacon logfiles on the RPI are in ONE file: /var/log/piBeacon.log
it looks like:
date              module       debuglvl message 
20190507-12:56:30 copyToTemp      L:-1= killing copyToTemp.py    
20190507-12:56:30 sundial         L:-2= move  return due to: direction1, inFixBoundaryMode:0 cap switch sens: 0;   switch sensor:0 
20190507-12:56:30 sundial         L:-3= 1100 === 34 1  
20190507-12:56:31 master          L:-1=  IP find:::: wifiIP >><<; eth0IP: >>192.168.1.39<<;   hostnameIP >>['192.168.1.39']<<;   ipAddressRead >>192.168.1.39<< 
20190507-12:56:31 sundial         L:-2= move  return due to: direction-1, inFixBoundaryMode:0 cap switch sens: 0;   switch sensor:0 
20190507-12:56:31 sundial         L:-3= 1300 === 85 -1  
20190507-12:56:31 master          L:-1=  master can ping indigo server at ip:>>192.168.1.50<< 
20190507-12:56:32 installLibs     L:-1=  installLibs starting  
20190507-12:56:32 installLibs     L:-1=  installLibs no opsys upgrade requested 
 
20190507-14:59:04 execcommands    L:-1= next command: {u'device': u'OUTPUTgpio-1', u'inverseGPIO': True, u'command': u'down', u'pin': u'26'} 
20190507-14:59:04 execcommands    L: 1= next cmd: "down" 
20190507-14:59:04 execcommands    L: 0= setGPIO pid=16700,  command :{'startAtDateTime': u'1557259144.27', 'values': {}, 'pin': '26', 'debug': 3, 'inverseGPIO': True, 'cmd': u'down', 'devId': 0, 'PWM': 1} 
20190507-14:59:04 execcommands    L: 0= msg: 156x-6-api_IN_14x-6-a{"outputs":{"OUTPUTgpio-1-ONoff":{"0":{"actualGpioValue":"high"}}},"program":"execcommands","ipAddress":"","pi":"14","ts":{"tz":"CDT","time":1557259144.16}}
 
20190507-14:59:04 execcommands    L:-1= next command: {u'device': u'OUTPUTgpio-1', u'inverseGPIO': True, u'command': u'down', u'pin': u'5'} 
20190507-14:59:04 execcommands    L: 1= next cmd: "down" 
20190507-14:59:04 execcommands    L: 0= setGPIO pid=16707,  command :{'startAtDateTime': u'1557259144.36', 'values': {}, 'pin': '5', 'debug': 3, 'inverseGPIO': True, 'cmd': u'down', 'devId': 0, 'PWM': 1} 
20190507-14:59:04 execcommands    L: 0= msg: 156x-6-api_IN_14x-6-a{"outputs":{"OUTPUTgpio-1-ONoff":{"0":{"actualGpioValue":"high"}}},"program":"execcommands","ipAddress":"","pi":"14","ts":{"tz":"CDT","time":1557259144.29}}
 

Added features / changes in v7.103.275 @ 2019-05-06
===================================================

1. fixed  SPRINKLER relay to be on if GPIO is 0 or 1 


Added features / changes in v7.103.274 @ 2019-04-30  
===================================================

1. added option for SPRINKLER relay to be on if GPIO is 0 or 1 
	set in device edit.

2. some typos in menus


Added features / changes in v7.103.274 @ 2019-02-20  
===================================================

1. added check at startup in case indigo device was deleted while pibeacon was not running



Added features / changes in v7.103.273 @ 2019-02-20  
===================================================

1. fixed plot beacons
	wrong test for xposition, was tested against Ymax not Xmax

2. moved plot beacon position to regular plugin.log file 

3. absolute position rotary switches with Serial input now support 6...12 bits resolution



Added features / changes in v7.103.272 @ 2019-02-10:  
===================================================

1. finalized rotaty encoded switch devices
	A absolute position
		read encoded n pin rotaty switch, send integer value to indogo every 90 secs or if changed
		grey code = only 1 bit changes pre step
		    eg http://www.grayhill.com/assets/1/7/mech_encoder_26.pdf
		regular binary; normal binary code 
		   like also: https://www.amazon.com/gp/product/B071F4QM6L/ref=ppx_yo_dt_b_asin_title_o06__o00_s00?ie=UTF8&th=1
		Bourns table encoded: 
			special bourns devices that comes with an 8 bit 0-127 value encoding
			    https://www.bourns.com/pdfs/ace.pdf
			    pins 1,2,G,,3,4   8,7,G,6,5 
				0-127 positions

		Bourns serial evice that is read like SPI, but just very simple code
			    CLK, CS, DO= read data. it is 10 bits + some status bits
			    pins: Di,CLK, GND, DO, V+, CS
			    https://www.bourns.com/pdfs/EMS22A.pdf
				0-1023 positions


	B continuous increment / decrement 
		"2-bit quadrature code" using 2 GPIO pins and GND and V+
		2 gpios are read. they go 1 0 1 0 .. most have 0=ON and 1 = off
		B: 011001100110
		A: 001100110011
		and opposit direction:
		B: 001100110011
		A: 011001100110 
		one full step is 4 bits

2. BUG fix for DHT temp sensor
	screw up in one of the last versions when I switch from 2 different DHT to one type

3. Made version check future proof

4. changed logging for errors or init of dataStats file




Added features / changes in v7.101.271 @ 2019-02-04:  
===================================================

1. added  save / reset for INPUT rotary increments devices
	at each start old values are read and saved to SSD when they changed.
	indigo menu option can send  reset command to the RPi to rotary switch counters 


Added features / changes in v7.101.270 @ 2019-02-04:  
===================================================

1. added lookup of mac to vendor name for ibeacons, added state "vendorName"

2. some smaller debugs

3. added check if userid / password not set: will write message and wait before doing anything  

4. converted to std logging

5. added sensor type: 
	INPUT-Rotatary-switch-Grey-Pulses : supports turn switches that send grey encoded pulse left and right direction
	INPUT-Rotatary-switch-encoded: supports turn switches that have static codes at n Pins that deliver 4.8.16... states from binary pins values

6. did a lot of testing and added little fixes when creating / deleting RPIs


Added features / changes in v7.100.269 @ 2019-01-25:  
===================================================

1. added time windows < 3 secs where status can not change up/down/up/down

2. added more options for stepper motor  
 - stepper motor ON time after move
 - wait before and after step loop


Added features / changes in v7.100.269 @ 2019-01-25:  
===================================================

1. fixed:  BLE connect up/down/up when iphone is off.

2. fixed:  some logging inconsistencies, typos... 

3. added support for various STEPPER MOTORS
You can chose between 5 pole unipolar and 2 coils bipolar stepper motors.  
These motors must be driven by chips:    
ULN2003 is a simple set of darlington transitors, current up to 250mA. It is used for the 5 pole unipolar motor   
L9110 low power and L298N high power: can be used to drive bipolar 2 coil motors in full and half step modes  
A4988 (8V-35V) and DRV8834(2.5V-8V) are more sophisticated.   
-They are almost 100% pin compatible
-Can drive bipolar 2 coil motors in 1,1/2,1/4,1/8,1/16 (and 1/32) step size you need to configure the pins on the chips to set the step size
-Can configure enable / sleep / reset and fault pins. They are currently only used to switch the motor ON at start,
      but you could also simply hardwire the pins at the chip directly. You should be able to use multiple motors on the same RPI, just limited by the number of GPIOs available
Use an indigo ACTION  "Send commands to stepper motor .." to drive the motor; #of steps, direction, delays ... can be send in single or multiple sets
You can use up to 3 GPIO input pins to control the range of the motor:  
   If one of thes GPIO goes High/low the motor will stop. This can be enabled / configured in each action separately. 
   In device edit you define the GPIO pin numbers and refer to them in actions as GPIO#0 / 1 / 2



Added features / changes in v7.99.266 @ 2019-01-08:  
===================================================

1. fixed:  sself.log.. should be  self.log... -- typo in 2 places. Only happens when error occurs and error is logged 


Added features / changes in v7.99.265 @ 2019-01-07:  
===================================================

1. fixed: 1. wlan0 not working, logging not working

Added features / changes in v7.99.263 @ 2019-01-06:  
===================================================

1. added support for wlan1 in addition to wlan0. in case you have 2 wifi adapters. BUT ONLY one can be active

2. moved all pibeacon files from ~/indigo/pibeacon to  /Library/Application Support/Perceptive Automation/Indigo 7.2/Preferences/Plugins/com.karlwachs.piBeacon/

3. all detailed logging now goes to /Library/Application Support/Perceptive Automation/Indigo 7.2/Logs/com.karlwachs.piBeacon/plugin.log. all error messages still go to teh standard indigo logfile

4. fixed bug line 4649 in buttonAnycommandCALLBACK bad operand... . only occures when sending custom command to rpi and logging was switched on

5. suppressed some RPi updating messages

A
Added features / changes in v7.99.262 @2018-12-28 :  
===================================================

1. renamed  dev state closestRPItext to closestRPIText to make it constant with previous name


Added features / changes in v7.99.261 @ 2018-12-28:  
===================================================

1. added support for sensors:
	- adafruit max31865 platinum 100/1000 temp sensor
	- adafruit  tmp007 remote temperature sensor,  successor to temp006


2. added back dev state closestRPItext for iBeacons:
	this dev state now shows the NAME of the closest RPI, not just PI_x
	also added option in config to set closestRPItext to blank when iBeacon leaves or keep the last RPI name



Added features / changes in v7.98.258 @ 2018-12-14:  
===================================================

1. bug fix for RPI beaconloop.py program - only a problem when BLE program was not working properly ie in restart: 
	return argument was mixed up, was introduced in 7.98.255 

2. added check for MAC mac number returned from RPI in plugin- in case of empty messages ... 

3. added RPI devices states: last_boot, rpi_type, op_sys to give you a quick view of the state and config of your RPIs.
	Useful if you have many RPi

4. Improved devices edit menus for RPi and iBeacon sensors

5. fixed reboot ssh command, was not always working 


===================================================

1. added clostedRPI state to RRPI devices. Was only in iBeacons devices


Added features / changes in v7.98.256 @ 2018-12-10:  
===================================================

1. clean up GPOIO output and inverse settings. the inverse as well as initial state are now shown in device states


Added features / changes in v7.98.255 @ 2018-12-09:  
===================================================

1. added option in RPI device edit to select which BLE channel should be used for iBeacon / BLEconnect.
	RPI3+ with SSD >=2018-11 does not work properly with the internal chip, 
	Must add an external USB dongle for iBeacon. BLE connect works fine w internal BLE chip.

2. added option to DELETE RPI in "initial setup of RPI" in the plugin menu, besides "ON/off".
	this is useful if you interchange RPi or want to get rid of any RPI config for a specific RPI. 
	
3. A RPI device will now be created when setting up a new RPi in "initial setup of RPI".
	the plugin does not wait for the first iBeacon message to create the RPI.
	The RPi will be initiated with MAC# 00:00:00:00:00:00. When the first iBeacon message arrives from the RPI that MAC number is overwritten 
	This is needed in order to be able to set the BLE device that should be used for iBeacon (for RPI3plus you need to set the BLE for iBeacon to USB)
	When the proper BLE device is not selected no iBeacon message are send from the RPI

4. added a log message when ftp to RPI is successfully finished (when Update RPI debug is on). Before only the start was put into the log file

5. increased some timers on the RPI python files to make sure that if something goes wrong and its in "panic" mode  it is not constantly rebooting, but wait 30+ secs between reboots.
	(I had that problem.)

These changes should now enable the usage of "SSD stretch image 2018-11" ... BUT the RPI3plus will need an extra BLE dongle to work. 
With "SSD stretch image 2018-04" RPI3plus works fine.




Added features / changes in v7.97.253 @ 2018-12-08:  
===================================================

1. fixed wrong trigger labels 


Added features / changes in v7.97.252 @ 2018-12-06:  
===================================================

1. option to set sleep/wait time after boot (in RPI device edit), before master.py starts.   
	This is useful for #2 and can be tuned to accommodate to let eg wifi connect before master.py is started  
	rc.local calls /home/pi/callbeacon.py, it then waits xx secs before it calls /home/pi/pibeacon/master.py  

2. option to set 2 GPIO  (input or output) to any value (in/out, low, high, floating .,..) BEFORE master.py immetiately after rc.local is finished (set in RPI device edit)  
	this is useful to set a GPIO as fast as possible after boot before all networks, vars, etc are finished.. saves ~ 15 secs  
	done in /home/pi/pibeacon/doGPIOatStartup.py called by /home/pi/callbeacon.py  ..called by rc.local after boot  
	doGPIOatStartup is setup by master with the options set in RPI device edit  

3. added state "actualGpioValue" to OUTPUT-GPIO on/off devices.  
	This will set the actual value of the GPIO on the RPI, msg send from rpi to the plugin.   
	It will be refreshed after GPIO is set from plugin and checked every 90 secs or if changed   
	useful if your GPIUO is set by other means or after a reboot the GPIOs might not be set properly  

4. added RPI device state "closest iBeacon". it will show eg b-xy-volvo-keys-turcoise@0.2 = name@distance.
	you can set cutoff distance (ignore if distance > xx) in PRI device edit
	you can set ignore THIS iBeacon for this feature in iBeacon device edit.
	how to use it in an action (python code), trigger on any chage of dev/state
		yyyy = indigo.devices["name of your rpi"].states
		xxx = yyyy["closestiBeacon"]
		if xxx.find("@")>-1:  
			nameOfBeacon = xxx.split("@")[0]
			distToRPI    = float(xxx.split("@")[1])
			indigo.server.log(" closest beacon to RPi is "+nameOfBeacon+" at distance of "+str(distToRPI))
			# do something with dist
			if distToRPI < 3: 
				indigo.server.log("beacon is very close" )
		else:
			indigo.server.log("no iBeacon is close" )
   

5. added option in menu to restart master.py in case it hangs ... 


x. will deprecate devices OUTPUT-GPIO-4,8,12,16,.. should all be changed to device type OUTPUT-GPIO-1-on-off
	it is to complicated to manage all the states and which one to use for status and is more in line with std Indigo philosophy 

