Added features / changes in v7.98.260 @ 2018-12-18:  
===================================================

1. bug fix for RPI beaconloop.py program - only a problem when BLE program was not working properly ie in restart: 
	return argument was mixed up, was introduced in 7.98.255 

2. added check for MAC mac number returned from RPI in plugin- in case of empty messages ... 

3. added RPI devices states: last_boot, last_masterStart, rpi_type, op_sys to give you a quick view of the state and config of your RPIs.
	Useful if you have many RPi to give you a quick overview of system configs etc.

4. Improved devices edit menus for RPi and iBeacon sensors

5. fixed reboot ssh command, was not always working 

6. added decoding of eg ";"  characters when send data from RPI to plugin through http to indigo variables

7. changed tag for expect ssh to "Last Login" from ":~". It is much less depended on op-sys, naming of rpi etc.




===================================================

1. added clostedRPI state to RRPI devices. Was only in iBeacons devices


Added features / changes in v7.98.256 @ 2018-12-10:  
===================================================

1. clean up GPOIO output and inverse settings. the inverse as well as initial state are now shown in device states


Added features / changes in v7.98.255 @ 2018-12-09:  
===================================================

1. added option in RPI device edit to select which BLE channel should be used for iBeacon / BLEconnect.
	RPI3+ with SSD >=2018-11 does not work properly with the internal chip, 
	Must add an external USB dongle for iBeacon. BLE connect works fine w internal BLE chip.

2. added option to DELETE RPI in "initial setup of RPI" in the plugin menu, besides "ON/off".
	this is useful if you interchange RPi or want to get rid of any RPI config for a specific RPI. 
	
3. A RPI device will now be created when setting up a new RPi in "initial setup of RPI".
	the plugin does not wait for the first iBeacon message to create the RPI.
	The RPi will be initiated with MAC# 00:00:00:00:00:00. When the first iBeacon message arrives from the RPI that MAC number is overwritten 
	This is needed in order to be able to set the BLE device that should be used for iBeacon (for RPI3plus you need to set the BLE for iBeacon to USB)
	When the proper BLE device is not selected no iBeacon message are send from the RPI

4. added a log message when ftp to RPI is successfully finished (when Update RPI debug is on). Before only the start was put into the log file

5. increased some timers on the RPI python files to make sure that if something goes wrong and its in "panic" mode  it is not constantly rebooting, but wait 30+ secs between reboots.
	(I had that problem.)

These changes should now enable the usage of "SSD stretch image 2018-11" ... BUT the RPI3plus will need an extra BLE dongle to work. 
With "SSD stretch image 2018-04" RPI3plus works fine.




Added features / changes in v7.97.253 @ 2018-12-08:  
===================================================

1. fixed wrong trigger labels 


Added features / changes in v7.97.252 @ 2018-12-06:  
===================================================

1. option to set sleep/wait time after boot (in RPI device edit), before master.py starts.   
	This is useful for #2 and can be tuned to accommodate to let eg wifi connect before master.py is started  
	rc.local calls /home/pi/callbeacon.py, it then waits xx secs before it calls /home/pi/pibeacon/master.py  

2. option to set 2 GPIO  (input or output) to any value (in/out, low, high, floating .,..) BEFORE master.py immetiately after rc.local is finished (set in RPI device edit)  
	this is useful to set a GPIO as fast as possible after boot before all networks, vars, etc are finished.. saves ~ 15 secs  
	done in /home/pi/pibeacon/doGPIOatStartup.py called by /home/pi/callbeacon.py  ..called by rc.local after boot  
	doGPIOatStartup is setup by master with the options set in RPI device edit  

3. added state "actualGpioValue" to OUTPUT-GPIO on/off devices.  
	This will set the actual value of the GPIO on the RPI, msg send from rpi to the plugin.   
	It will be refreshed after GPIO is set from plugin and checked every 90 secs or if changed   
	useful if your GPIUO is set by other means or after a reboot the GPIOs might not be set properly  

4. added RPI device state "closest iBeacon". it will show eg b-xy-volvo-keys-turcoise@0.2 = name@distance.
	you can set cutoff distance (ignore if distance > xx) in PRI device edit
	you can set ignore THIS iBeacon for this feature in iBeacon device edit.
	how to use it in an action (python code), trigger on any chage of dev/state
		yyyy = indigo.devices["name of your rpi"].states
		xxx = yyyy["closestiBeacon"]
		if xxx.find("@")>-1:  
			nameOfBeacon = xxx.split("@")[0]
			distToRPI    = float(xxx.split("@")[1])
			indigo.server.log(" closest beacon to RPi is "+nameOfBeacon+" at distance of "+str(distToRPI))
			# do something with dist
			if distToRPI < 3: 
				indigo.server.log("beacon is very close" )
		else:
			indigo.server.log("no iBeacon is close" )
   

5. added option in menu to restart master.py in case it hangs ... 


x. will deprecate devices OUTPUT-GPIO-4,8,12,16,.. should all be changed to device type OUTPUT-GPIO-1-on-off
	it is to complicated to manage all the states and which one to use for status and is more in line with std Indigo philosophy 

